{"version":3,"sources":["components/header/index.js","components/imageCard/index.js","App.js","index.js"],"names":["Header","props","notes","correct","react_default","a","createElement","className","score","topScore","ImageCard","alt","name","src","image","onClick","handleClick","id","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beenClicked","setState","cards","state","map","item","clicked","Math","max","restart","shuffle","newArray","oldArray","slice","i","length","push","splice","floor","random","_this2","header","imageCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"47BAsBeA,MAnBf,SAAgBC,GACb,IAAIC,EAQL,OANAA,GADkB,IAAhBD,EAAME,QACF,wBACsB,IAAlBF,EAAME,QACR,kCAEA,2BAGNC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEfH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,eACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASL,GACzBE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,UAAuCN,EAAMO,MAA7C,iBAAkEP,EAAMQ,kBCN7DC,MARf,SAAmBT,GACjB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKV,EAAMW,KAAMC,IAAKZ,EAAMa,MAAOC,QAAS,kBAAMd,EAAMe,YAAYf,EAAMgB,gBCoFxEC,qBApFb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAmBJN,YAAa,SAACC,GACV,IAAKS,GAAc,EAEnBP,EAAKQ,SAAS,CACVC,MAAOT,EAAKU,MAAMD,MAAME,IAAI,SAAAC,GAOxB,OANIA,EAAKd,KAAOA,IACRc,EAAKC,UACJN,GAAa,GAElBK,EAAKC,SAAU,GAEZD,IAGXvB,MAAQkB,EACRP,EAAKU,MAAMrB,MAAQW,EAAKU,MAAMrB,MAAQ,EAEtCC,SAAWiB,EACXO,KAAKC,IAAIf,EAAKU,MAAMrB,MAAOW,EAAKU,MAAMpB,UACrCwB,KAAKC,IAAIf,EAAKU,MAAMrB,MAAQ,EAAGW,EAAKU,MAAMpB,UAE1CN,SAAUuB,GAGd,WACQA,GAEDP,EAAKgB,YAIbhB,EAAKiB,WAjDLjB,EAAKU,MAAQ,CACTD,QACApB,MAAO,EACPC,SAAU,EACVN,QAAS,IANDgB,yEAWZG,KAAKK,SAAS,CACVC,MAAON,KAAKO,MAAMD,MAAME,IAAI,SAAAC,GAExB,OADAA,EAAKC,SAAU,EACRD,IAEXvB,MAAO,sCAyCX,IAFA,IAAI6B,EAAW,GACXC,EAAWhB,KAAKO,MAAMD,MAAMW,MAAM,GAC9BC,EAAIF,EAASG,OAAS,EAAGD,GAAK,EAAGA,IACrCH,EAASK,KAAKJ,EAASK,OACnBV,KAAKW,MAAMX,KAAKY,SAAWP,EAASG,QAAS,GAAG,IAGxDnB,KAAKK,SAAS,CACVC,MAAOS,qCAIN,IAAAS,EAAAxB,KACL,OACIlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyC,EAAD,CAAQ5C,QAASmB,KAAKO,MAAM1B,QAASK,MAAOc,KAAKO,MAAMrB,MAAOC,SAAUa,KAAKO,MAAMpB,WACnFL,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbe,KAAKO,MAAMD,MAAME,IAAI,SAAAC,GACpB,OAAO3B,EAAAC,EAAAC,cAAC0C,EAAD,CAAYC,IAAKlB,EAAKd,GAAIA,GAAIc,EAAKd,GAAIL,KAAMmB,EAAKnB,KAAME,MAAOiB,EAAKjB,MAAOE,YAAa8B,EAAK9B,yBA3E9FkC,oBCAlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f9dc269e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n   let notes;\nif (props.correct===true){\n  notes='You guess correctly!';\n } else if (props.correct === false) {\n  notes = 'Sorry, you guessed incorrectly!';\n} else {\n  notes = 'Click an image to begin!';\n}\n  return (\n    <nav className='navbar'>\n  \n    <span className='title'>Clicky Game</span>\n    <span className='notes'>{notes}</span>\n    <span className='scoreDisplay'>Score: {props.score} | Top Score: {props.topScore}</span>\n</nav>\n  )\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.handleClick(props.id)} />\n      </div>\n  );\n}\n\nexport default ImageCard;\n","import React, { Component } from \"react\";\nimport Header from \"./components/header\"\nimport ImageCards from \"./components/imageCard\"\nimport cards from \"./cards.json\";\nimport \"./App.css\"\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        cards,\n        score: 0,\n        topScore: 0,\n        correct: \"\"\n    }\n}\n//set all the clicked to false and set socre to 0\nrestart() {\n    this.setState({\n        cards: this.state.cards.map(item => {\n            item.clicked = false;\n            return item;\n        }),\n        score: 0,\n    })\n}\n//handle when user clicked an image\nhandleClick =(id) => {\n    let  beenClicked = false;\n    //check to see if image been clicked \n    this.setState({\n        cards: this.state.cards.map(item => {\n            if (item.id === id) {\n                if (item.clicked) {\n                     beenClicked= true;\n                }\n                item.clicked = true;\n            }\n            return item;\n        }),\n        //update the score, if already clicked, return to zero, else add 1\n        score:  beenClicked ? \n        this.state.score : this.state.score + 1,\n        //check to topscore\n        topScore:  beenClicked ? \n        Math.max(this.state.score, this.state.topScore) :\n         Math.max(this.state.score + 1, this.state.topScore),\n       // update whether the click is true or false\n         correct: !beenClicked\n  \n    },\n     () => {\n        if ( beenClicked\n    ) {\n            this.restart();\n        }\n    });\n    \n    this.shuffle();\n}\n\nshuffle() {\n    let newArray = [];\n    let oldArray = this.state.cards.slice(0);\n    for(let i = oldArray.length - 1; i >= 0; i--) {\n        newArray.push(oldArray.splice(\n            Math.floor(Math.random() * oldArray.length), 1)[0]);\n    }\n    //update the newArray to the cards in the state\n    this.setState({\n        cards: newArray\n    })\n}\n//render the page , pass in all the props for each component\nrender() {\n    return (\n        <div>\n            <Header correct={this.state.correct} score={this.state.score} topScore={this.state.topScore} />\n            <br/>\n         <div className=\"card-container\">\n         { this.state.cards.map(item => {\n            return <ImageCards key={item.id} id={item.id} name={item.name} image={item.image} handleClick={this.handleClick}/>\n         })\n            }\n        </div>\n        </div>\n    )\n}\n\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}